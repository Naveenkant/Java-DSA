package code_forces;
import java.io.*;

import java.util.*;

class priorityqueue{
	int size;
	
	     priorityqueue(int cap){
		 size=cap;
	}
	     
}
class A {
	static int a[]=new int[10000];
    public static void main(int args[] ) {
     Scanner sc = new Scanner(System.in);
     insertKey(a,5,1);
     df
     
    
    }
   static void insertKey(int a[],int key,int n) {
    	n++;
    	a[n-1]=key;
    	int j=n-1;
    	while(j>0) {
    		int parent=j/2;
    		if(a[parent]>a[j]) {
    			int temp=a[parent];
    			a[parent]=a[j];
    			a[j]=temp;
    		}
            j=parent;    		
    	}
    }
   static void deleteKey(int a[],int n) {
    	int data=a[0];
    a[0]=a[n];
    n--;
    Heapify(a,0,n);
    	
    }
  static  void Heapify(int a[],int index,int n) {
    	int largest=index;
    	int left=index*2+1;
    	int right=index*2+2;
    	if(left<n && a[left]>a[largest]) {
    		largest=left;
    	}
    	if(right<n && a[right]>a[largest]) {
    		largest=right;
    	}
    	if(largest!=index) {
    		int temp=a[largest];
    		a[largest]=a[index];
    		a[index]=temp;
    		Heapify(a,largest,n);
    	}
    }
    
}
