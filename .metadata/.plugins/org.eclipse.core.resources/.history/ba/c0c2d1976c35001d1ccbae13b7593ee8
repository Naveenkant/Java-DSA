package code_forces;
import java.io.*;

import java.util.*;

class A {
   
    public static void main(String args[] ) throws Exception {
     Scanner sc=new Scanner(System.in);
    
     int MAX = 1000;
     int[] a = new int[MAX];
      
     // initializing some values
     a[0] = 10;
     a[1] = 5;
     a[2] = 3;
     a[3] = 2;
     a[4] = 4;
      
     int n = 5;
     int Key = 15;
      
     insert(a,Key,n);
     System.out.println(Arrays.toString(a));
    
    }
  static void sort(int a[],int n) {
	for(int i=n/2-1 ;i>=0;i--) {
		hepify(a,i,n);
	}
	for(int i=n-1;i>0;i--) {
		int temp=a[0];
		a[0]=a[i];
		a[i]=temp;
		hepify(a,0,i);
	}
	

  }
  static int delete(int a[],int n) {
	  int last=a[n-1];
	  a[0]=a[n-1];
	   n--;
	   hepify(a,0,n);
	   return n;
  }
  static void insert(int a[],int ele,int n) {
a[n]=ele;
n++;
while(n>0) {
	 int p=n/2;
	 if(a[p]<a[n]) {
		 int temp=a[p];
		 a[p]=a[n];
		 a[n]=temp;
	 }
	 n/=2;
}
  }
 static void hepify(int a[],int i,int n) {
	  
	  int largest =i;
	  int left=2*i+1;
	  int right=2*i+2;
	  
	  if(left<n && a[left]>a[largest]) {
		  largest=left;
	  }
	  if(right<n && a[right]>a[largest]) {
		  largest=right;
	  }
	  if(largest!=i) {
		  int temp=a[i];
		  a[i]=a[largest];
		  a[largest]=temp;
		  hepify(a,largest,n);
	  }
  }
  
}
