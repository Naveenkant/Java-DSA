package code_forces;
import java.util.*;
public class B {
	public static void main(String []args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		Solution s=new Solution();
		int r[][]= {{1,1},{2,2},{3,3}};
				int p[][]= {{1,3},{1,1}};
		
	}
}
class Solution {
    public int[] fullBloomFlowers(int[][] f, int[] p) {
        int max=0;
        ArrayList<Integer>al1=new ArrayList<>();
        ArrayList<Integer>al2=new ArrayList<>();
        
        for(int i=0;i<f.length;i++){
            int a=f[i][0];
            int b=f[i][1];
al1.add(a);
al2.add(b);
        }
        Collections.sort(al1);
        Collections.sort(al2);
        int a1[]=new int[al1.size()];
        int a2[]=new int[al1.size()];
        for(int i=0;i<a1.length;i++)
        {
        	a1[i]=al1.get(i);
        	a2[i]=al2.get(i);
        }
        
       
        ArrayList<Integer>al=new ArrayList<>();
		return a2;
        
    }
    static int lower_bound(int array[], int key)
    {
        int index = Arrays.binarySearch(array, key);
        if (index < 0) {
            return Math.abs(index) - 1;
        }
        else {
            while (index > 0) {
                if (array[index - 1] == key)
                    index--;
                else
                    return index;
            }
  
            return index;
        }
    }
    static int upper_bound(int array[], int key)
    {
        int index = Arrays.binarySearch(array, key);
        if (index < 0) {
            return Math.abs(index) - 1;
        }
        else {
            while (index > 0) {
                if (array[index - 1] == key)
                    index--;
                else
                    return index;
            }
  
            return index;
        }
    }
  
}